services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 80:8000
    depends_on:
      - db
    env_file:
      - '.env'
    command: python manage.py runserver 0.0.0.0:8000

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - db
      - redis
    env_file:
      - '.env'
    command: celery -A cryptoapp worker --loglevel=info
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [ gpu ]

  db:
    image: postgres
    restart: always
    env_file:
      - '.env'
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - 5432:5432

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080

  redis:
    image: redis:alpine
    ports:
      - 6379:6379
    env_file:
      - '.env'
